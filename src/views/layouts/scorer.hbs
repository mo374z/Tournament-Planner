<div class="container">
    <h1>Torschützen zuordnen</h1>
    <button class="btn btn-primary mb-3" onclick="location.reload()">Liste aktualisieren</button>
    <hr>
    <h2>Tore ohne Spieler:</h2>
    <h8>Durch klicken auf ein Tor, kann ein Spieler zugewiesen werden. (neuestes Tor ist oben)</h8>
    {{#if goalsWithoutPlayer.length}} 
        <table class="table table-striped table-hover ">
            <thead>
                <tr>
                    <th>Spiel</th>
                    <th>Tor Spiel</th>
                    <th>Uhrzeit</th>
                    <th>Spielminute</th>
                    <th>Team</th>
                    <th>Ergebnis</th>
                    <th>Mannschaften</th>
                    <th>Art</th>   
                    <th>Sekt</th>
                    <th>Tor Tunier</th>
                </tr>
            </thead>
            <tbody>
                {{#each goalsWithoutPlayer}}
                    <tr onclick="toggleAssignPlayer(this, '{{teamIndex}}', '{{opponents.[0]}}', '{{opponents.[1]}}')">
                        <td>{{gameNumber}}</td>
                        <td>{{goalIndex}}</td>
                        <td>{{formattedTimestamp}}</td>
                        <td>{{formatedgameTimestamp}}</td>
                        <td>{{teamName}}</td>
                        {{!-- {{teamIndex}} --}}
                        <td>
                            {{#if (eqref teamIndex 0)}}
                                <strong>{{scores.[0]}}</strong> : {{scores.[1]}}
                            {{else}}
                                {{scores.[0]}} : <strong>{{scores.[1]}}</strong>
                            {{/if}}
                        </td>
                        <td>{{opponents.[0]}} : {{opponents.[1]}}</td>
                        <td>{{gameDisplayName}}</td>
                        <td>{{sekt}}</td>
                        <td>{{goalIndexTournament}}</td>
                    </tr>
                    <tr class="assign-player-row" style="display: none; border: 3px solid #cccccc; padding: 10px; background-color: #f1f0f0;">
                        <td colspan="9">
                            <form action="/scorer/assignPlayer" method="POST" class="assign-player-form">
                                <input type="hidden" name="gameId" value="{{gameId}}">
                                <input type="hidden" name="goalId" value="{{_id}}">
                                <input type="hidden" name="playerId">
                                <input type="text" class="form-control" onkeyup="filterPlayers(this, '{{teamIndex}}', '{{opponents.[0]}}', '{{opponents.[1]}}')" placeholder="Spielername oder Nummer eingeben">
                                <div class="form-check mt-2">
                                    <input class="form-check-input" type="checkbox" id="searchAllPlayers" onchange="filterPlayers(this.previousElementSibling, '{{teamIndex}}', '{{opponents.[0]}}', '{{opponents.[1]}}')">
                                    <label class="form-check-label" for="searchAllPlayers">
                                        Alle Spieler durchsuchen
                                    </label>
                                </div>
                                <table class="table table-striped player-list">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Nummer</th>
                                            <th>Team</th>
                                            <th>Aktion</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </form>
                        </td>
                    </tr>
                {{/each}}
            </tbody>
        </table>
    {{else}}
        <p>No goals without assigned players found.</p>
    {{/if}}

    <hr>
    <h2>Tore mit Spieler:</h2>
    {{#if goalsWithPlayer.length}}
        <table class="table table-striped table-hover table-bordered">
            <thead>
                <tr>
                    <th>Spiel</th>
                    <th>Tor Spiel</th>
                    <th>Uhrzeit</th>
                    <th>Spielminute</th>
                    <th>Team</th>
                    <th>Ergebnis</th>
                    <th>Mannschaften im Spiel</th>
                    <th>Art</th>   
                    <th>Sekt</th>
                    <th>Tor Tunier</th>
                    <th>Torschütze</th>
                    {{!-- <th>goalID</th> --}}
                </tr>
            </thead>
            <tbody>
                {{#each goalsWithPlayer}}
                    <tr>
                        <td>{{gameNumber}}</td>
                        <td>{{goalIndex}}</td>
                        <td>{{formattedTimestamp}}</td>
                        <td>{{formatedgameTimestamp}}</td>
                        <td>{{teamName}}</td>
                        <td>
                            {{#if (eqref teamIndex 0)}}
                                <strong>{{scores.[0]}}</strong> : {{scores.[1]}}
                            {{else}}
                                {{scores.[0]}} : <strong>{{scores.[1]}}</strong>
                            {{/if}}
                        </td>
                        <td>{{opponents.[0]}} : {{opponents.[1]}}</td>
                        <td>{{gameDisplayName}}</td>
                        <td>{{sekt}}</td>
                        <td>{{goalIndexTournament}}</td>
                        <td>{{playerName}}</td>
                        {{!-- <td>{{goalId}}</td> --}}
                    </tr>
                {{/each}}
            </tbody>
        </table>
    {{else}}
        <p>No goals with assigned players found.</p>
    {{/if}}
</div>

<script>
function toggleAssignPlayer(row, teamIndex, team1, team2) {
    console.log('toggleAssignPlayer called');
    console.log('teamIndex:', teamIndex, 'team1:', team1, 'team2:', team2);

    const nextRow = row.nextElementSibling;
    if (nextRow && nextRow.classList.contains('assign-player-row')) { // Check if the next row is an assign-player-row
        if (nextRow.style.display === 'table-row') { // Check if the assign-player-row is already open
            nextRow.style.display = 'none';
            row.style.border = ''; // Remove border from the row
        } else {
            // Close all other assign-player-rows and open the clicked one
            document.querySelectorAll('.assign-player-row').forEach(row => row.style.display = 'none');
            document.querySelectorAll('tr').forEach(row => row.style.border = ''); // Remove border from all rows
            nextRow.style.display = 'table-row';
            row.style.border = '3px solid red'; // Add border to the row
            const input = nextRow.querySelector('input[type="text"]');
            input.value = ''; // Clear input field for a new search
            const checkbox = nextRow.querySelector('#searchAllPlayers');
            checkbox.checked = false; // Uncheck the checkbox
            filterPlayers(input, teamIndex, team1, team2);
        }
    }
}

function filterPlayers(input, teamIndex, team1, team2) {
    console.log('filterPlayers called');
    console.log('teamIndex:', teamIndex, 'team1:', team1, 'team2:', team2);

    if (!input) {
        console.log('No search value provided');
        return;
    }

    const filter = input.value.toLowerCase();
    const playerList = input.closest('form').querySelector('.player-list tbody');
    const searchAllPlayers = input.closest('form').querySelector('#searchAllPlayers').checked;
    playerList.innerHTML = '';

    const players = {{{json players}}};
    const teams = {{{json teams}}};
    console.log('players:', players);
    console.log('teams:', teams);

    const team1Id = teams.find(team => team.name === team1)._id;
    const team2Id = teams.find(team => team.name === team2)._id;

    let filteredPlayers;
    if (filter === '') {
        // Show all players from the team that scored the goal
        filteredPlayers = players.filter(player => player.team === (teamIndex == 0 ? team1Id : team2Id));
    } else {
        // Filter players based on the search input and checkbox state
        filteredPlayers = players.filter(player => {
            return (searchAllPlayers || player.team === (teamIndex == 0 ? team1Id : team2Id)) &&
                   (player.name.toLowerCase().includes(filter) || (player.number && player.number.toString().includes(filter)));
        });
    }

    console.log('filteredPlayers:', filteredPlayers);

    filteredPlayers.forEach(player => {
        const teamName = teams.find(team => team._id.toString() === player.team.toString()).name;
        const playerRow = document.createElement('tr');
        playerRow.innerHTML = `
            <td>${player.name}</td>
            <td>${player.number !== null ? player.number : ''}</td>
            <td>${teamName}</td>
            <td><button type="button" class="btn btn-primary" onclick="assignPlayer(this, '${player._id}')">Zuweisen</button></td>
        `;
        playerList.appendChild(playerRow);
    });

    if(filteredPlayers.length === 0) {
        const noPlayerRow = document.createElement('tr');
        noPlayerRow.innerHTML = '<td colspan="4">No players found</td>';
        playerList.appendChild(noPlayerRow);
    }
}

function assignPlayer(button, playerId) {
    console.log('assignPlayer called');
    console.log('playerId:', playerId);

    const form = button.closest('form');
    form.querySelector('input[name="playerId"]').value = playerId;
    form.submit();
}
</script>
